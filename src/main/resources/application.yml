spring:
  thymeleaf:
    mode: HTML5
    encoding: UTF-8
    suffix: .html
    prefix: classpath:/templates/
    cache: false
    servlet:
      content-type: text/html
  mvc:
    static-path-pattern: /static/**
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource #使用阿里的druid线程池 这里是为了在项目中使用来管理数据库连接的。只是生成代码的话 无需配置
    driver-class-name: oracle.jdbc.driver.OracleDriver #oracle数据库
    url: jdbc:oracle:thin:@192.168.1.145:1521:orcl
    #    username: cpdb
    #    password: cpdb
    #d区数据库
    username: cpdbd
    password: cpdbd
    druid: #使用阿里的druid线程池 这里是为了在项目中使用来管理数据库连接的。只是生成代码的话 无需配置
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 校验SQL，Oracle配置
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
#      以下配置是开启数据库通讯监控  这里暂时不需要
#      stat-view-servlet:
#        enabled: true
#        url-pattern: /druid/*
#        login-username: admin
#        login-password: admin1
#      filter:
#        stat:
#          log-slow-sql: true
#          slow-sql-millis: 1000
#          merge-sql: true
#        wall:
#          config:
#            multi-statement-allow: true



#mybatis
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  #typeAliasesPackage: com.gili.atms.admin.entity
  #typeEnumsPackage: com.gili.atms.admin.entity.enums
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 1
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置
    logic-delete-value: 1
    logic-not-delete-value: 0
    #自定义SQL注入器
    #    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
